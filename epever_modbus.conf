# # Retrieve data from MODBUS slave devices
[[inputs.modbus]]
#   ## Connection Configuration
#   ##
#   ## The plugin supports connections to PLCs via MODBUS/TCP or
#   ## via serial line communication in binary (RTU) or readable (ASCII) encoding
#   ##
#   ## Device name
   name = "SOLAR"
#
#   ## Slave ID - addresses a MODBUS device on the bus
#   ## Range: 0 - 255 [0 = broadcast; 248 - 255 = reserved]
   slave_id = 1
#
#   ## Timeout for each request
   timeout = "1s"
#
#   ## Maximum number of retries and the time to wait between retries
#   ## when a slave-device is busy.
#   # busy_retries = 0
#   # busy_retries_wait = "100ms"
#
#   # TCP - connect via Modbus/TCP
#   controller = "tcp://localhost:502"
#
#   ## Serial (RS485; RS232)
 controller = "file:///dev/ttyUSB0"
 baud_rate = 115200
 data_bits = 8
 parity = "N"
 stop_bits = 1
 transmission_mode = "RTU"

#
#
#   ## Measurements
#   ##
#
#   ## Digital Variables, Discrete Inputs and Coils
#   ## measurement - the (optional) measurement name, defaults to "modbus"
#   ## name        - the variable name
#   ## address     - variable address
#
#   discrete_inputs = [
#     { name = "start",          address = [0]},
#     { name = "stop",           address = [1]},
#     { name = "reset",          address = [2]},
#     { name = "emergency_stop", address = [3]},
#   ]
#   coils = [
#     { name = "motor1_run",     address = [0]},
#     { name = "motor1_jog",     address = [1]},
#     { name = "motor1_stop",    address = [2]},
#   ]
#
#   ## Analog Variables, Input Registers and Holding Registers
#   ## measurement - the (optional) measurement name, defaults to "modbus"
#   ## name        - the variable name
#   ## byte_order  - the ordering of bytes
#   ##  |---AB, ABCD   - Big Endian
#   ##  |---BA, DCBA   - Little Endian
#   ##  |---BADC       - Mid-Big Endian
#   ##  |---CDAB       - Mid-Little Endian
#   ## data_type  - INT16, UINT16, INT32, UINT32, INT64, UINT64,
#   ##              FLOAT32-IEEE, FLOAT64-IEEE (the IEEE 754 binary representation)
#   ##              FLOAT32, FIXED, UFIXED (fixed-point representation on input)
#   ## scale      - the final numeric variable representation
#   ## address    - variable address
#
#   holding_registers = [
#     { name = "power_factor", byte_order = "AB",   data_type = "FIXED", scale=0.01,  address = [8]},
#     { name = "voltage",      byte_order = "AB",   data_type = "FIXED", scale=0.1,   address = [0]},
#     { name = "energy",       byte_order = "ABCD", data_type = "FIXED", scale=0.001, address = [5,6]},
#     { name = "current",      byte_order = "ABCD", data_type = "FIXED", scale=0.001, address = [1,2]},
#     { name = "frequency",    byte_order = "AB",   data_type = "UFIXED", scale=0.1,  address = [7]},
#     { name = "power",        byte_order = "ABCD", data_type = "UFIXED", scale=0.1,  address = [3,4]},
#   ]
   input_registers = [
     { name = "PV_V",   byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [12544]},
     { name = "PV_I",   byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [12545]},
     { name = "PV_P",     byte_order = "CDAB", data_type = "FLOAT32",   scale=0.01,     address = [12546,12547]},
     { name = "B_V",    byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [12548]},
     { name = "B_I",   byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [12549]},
     { name = "B_P",   byte_order = "CDAB",   data_type = "FLOAT32",   scale=0.01,     address = [12550, 12551]},
     { name = "L_V",       byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [12556]},
     { name = "L_I",       byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [12557]},
     { name = "L_P",         byte_order = "CDAB", data_type = "FLOAT32",   scale=0.01,     address = [12558,12559]},
     { name = "B_T",       byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [12560]},
     { name = "C_T",       byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [12561]},
     { name = "HS_T",       byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [12562]},
     { name = "B_SOC",       byte_order = "AB",   data_type = "FLOAT32",   scale=1.0,     address = [12570]},
     { name = "Max_PV_V",       byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [13056]},
     { name = "Max_B_V",       byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [13058]},
     { name = "Min_B_V",       byte_order = "AB",   data_type = "FLOAT32",   scale=0.01,     address = [13059]},
     { name = "EC_d",       byte_order = "CDAB",   data_type = "FLOAT32",   scale=0.01,     address = [13060,13061]},
     { name = "EC_m",       byte_order = "CDAB",   data_type = "FLOAT32",   scale=0.01,     address = [13062,13063]},
     { name = "EC_y",       byte_order = "CDAB",   data_type = "FLOAT32",   scale=0.01,     address = [13064,13065]},
     { name = "TEC",       byte_order = "CDAB",   data_type = "FLOAT32",   scale=0.01,     address = [13066,13067]},
     { name = "EG_d",       byte_order = "CDAB",   data_type = "FLOAT32",   scale=0.01,     address = [13068,13069]},
     { name = "EG_m",       byte_order = "CDAB",   data_type = "FLOAT32",   scale=0.01,     address = [13070,13071]},
     { name = "EG_y",       byte_order = "CDAB",   data_type = "FLOAT32",   scale=0.01,     address = [13072,13073]},
     { name = "TEG",       byte_order = "CDAB",   data_type = "FLOAT32",   scale=0.01,     address = [13074,13075]},
]
